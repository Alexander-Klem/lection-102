{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACe;AACf;AACe;AACf;AACA;;;;;;UCRA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNA;AACA,eAAe,WAAW,kBAAkB;AAC5C,kBAAkB,KAAK,MAAM,IAAI;AACjC;AACA,eAAe,eAAe,kBAAkB;AAChD;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,YAAY,WAAW,kBAAkB;AACzC;AACA,kBAAkB,KAAK,MAAM,IAAI;AACjC;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,WAAW,iBAAiB;AACxG;AACA,CAAC;AACD;AACA;AACqC;AACP;AAC9B;AACA,eAAe,yCAAG,EAAE,MAAM,yCAAG,CAAC;AAC9B,oDAAK,G","sources":["webpack://lection-102(es-6-modules)/./src/js/main.js","webpack://lection-102(es-6-modules)/webpack/bootstrap","webpack://lection-102(es-6-modules)/webpack/runtime/define property getters","webpack://lection-102(es-6-modules)/webpack/runtime/hasOwnProperty shorthand","webpack://lection-102(es-6-modules)/webpack/runtime/make namespace object","webpack://lection-102(es-6-modules)/./src/js/script.js"],"sourcesContent":["export let one = 1;\r\n\r\nlet two = 2;\r\n\r\nexport { two };\r\n\r\nexport default function sayHi() { \r\n    console.log(`Hello`);\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\r\n// 1) import { one, two } from \"./main.js\"; // Импортируем сразу две переменные\r\n// console.log(`${one} and ${two}`);\r\n\r\n// 2) import { one as first } from \"./main.js\"; можно переименовать переменную (когда большое название переменной и ее неудобно читать)\r\n// console.log(first);\r\n\r\n// 3) import * as data from \"./main\"; // * - позволяет нам импортировать все что экспортируется из файла (data - по сути объект, который включает все что было экпортировано)\r\n// import * as data from \"./main\"\r\n// data.sayHi();\r\n\r\n// import { one, two } from \"./main.js\"; // по сути тут просто деструктуризация объекта на one и two\r\n\r\n// console.log(`${one} and ${two}`);\r\n\r\n// !В модулях может быть экспорт по умолчанию. Он может быть только один т.е ЭКСПОРТ ПО УМОЛЧАНИЮ ДОЛЖЕН БЫТЬ ТОЛЬКО ОДИН:\r\n// -export default\r\n// import sayHi from \"./main.js\"; // тут функция напрямую экспортируется из main.js\r\n// sayHi();\r\n\r\n// 4) Атрибут typemodel - можем применить к тегу скрипт в HTML, чтобы он попытался использовать скрипты в качестве модулей.\r\n// Порядок действий:\r\n// 1) Настроить все необходимые экспорты и импорты\r\n// 2) Правильно подключить на нашу страницу:\r\n// 1 - ый файл идет тот, у которого файлы экспортируются\r\n// 2 - ой файл\r\n// 3 поставить type=\"module\"\r\n// 4 Должны правильно прописывать пути к нашим файлам т.е main.js (import { one, two } from \"./main.js\";)\r\n\r\n{/* <script type=\"module\" src=\"./src/js/main.js\"></script>\r\n<script type=\"module\" src=\"./src/js/script.js\" ></script> */}\r\n\r\nimport { one, two } from \"./main.js\";\r\nimport sayHi from \"./main.js\";\r\n\r\nconsole.log(`${one} and ${two}`);\r\nsayHi();"],"names":[],"sourceRoot":""}